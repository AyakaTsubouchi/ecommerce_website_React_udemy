{"version":3,"sources":["util.js","components/Products.js","components/Filter.js","components/Basket.js","components/Header.js","components/WeatherInfo.js","components/App.js","serviceWorker.js","index.js"],"names":["num","Number","toFixed","toLocaleString","Products","productItems","this","props","products","map","product","className","key","id","style","marginTop","href","onClick","e","handleAddToCart","src","sku","alt","title","util","price","Component","Filter","console","log","count","onChange","handleChangeSort","value","sort","handleChangeSize","size","handleChangeSeason","season","Basket","cartItems","length","item","handleRemoveFromCart","reduce","a","c","alert","Header","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","class","WeatherInfo","weather","city","weatherImg","maxWidth","temperature","App","state","filteredProducts","undefined","humidity","description","bind","fetch","then","res","status","json","data","setState","main","temp","name","error","target","listProducts","b","filter","availableSizes","indexOf","toUpperCase","toLowerCase","productAlreadyInCart","forEach","push","localStorage","setItem","JSON","stringify","elm","sizes","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.02d25022.chunk.js","sourcesContent":["export default {\n  formatCurrency: function(num) {\n    return '$' + Number(num.toFixed(1)).toLocaleString() + ' ';\n  }\n};\n","import React, { Component } from 'react';\nimport util from '../util';\n\nexport default class Products extends Component {\n  render() {\n    const productItems = this.props.products.map(product => (\n      <div\n        className=\"col-md-4 Products\"\n        key={product.id}\n        style={{ marginTop: '15px' }}>\n        <div className=\"thumbnail text-center\">\n          <a\n            href={`#${product.id}`}\n            onClick={e => this.props.handleAddToCart(e, product)}>\n            <img src={`products/${product.sku}_2.jpg`} alt={product.title} />\n            <p>{product.title}</p>\n          </a>\n          <b>{util.formatCurrency(product.price)}</b>\n          <br />\n          <button\n            className=\"small-btn btn-primary\"\n            onClick={e => this.props.handleAddToCart(e, product)}>\n            Add to cart\n          </button>\n        </div>\n      </div>\n    ));\n\n    return <div className=\"row\">{productItems}</div>;\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class Filter extends Component {\n  render() {\n    console.log(\"I'm count from filter\" + this.props.count);\n    return (\n      <div>\n        <div className=\"row\">\n          <div className=\"col-md-3\">{this.props.count} products found</div>\n          <div className=\"col-md-3\">\n            <label>\n              order by\n              <select\n                className=\"form-control\"\n                onChange={this.props.handleChangeSort}\n                value={this.props.sort}>\n                <option value=\"\">Select</option>\n                <option value=\"lowest\">lowest to highest</option>\n                <option value=\"highestt\">highest to lowest</option>\n              </select>\n            </label>\n          </div>\n          <div className=\"col-md-3\">\n            <label>\n              size\n              <select\n                className=\"form-control\"\n                onChange={this.props.handleChangeSize}\n                value={this.props.size}>\n                <option value=\"\">ALL</option>\n                <option value=\"WOMEN\">WOMEN</option>\n                <option value=\"MEN\">MEN</option>\n                <option value=\"FORMAL\">FORMAL</option>\n                <option value=\"CASUAL\">CASUAL</option>\n              </select>\n            </label>\n          </div>\n          <div className=\"col-md-3\">\n            <label>\n              Season\n              <button\n                className=\"form-control\"\n                onClick={this.props.handleChangeSeason}\n                value={this.props.season}>\n                {/* TODO chenge to selection form Todays weather, supring,summer,autumn,winter*/}\n                {/* value={this.props.season} */}\n                {/* <option>get season</option> */}\n                {/* <option value=\"summer\">SUMMER</option>\n                <option value=\"autumn\">AUTUMN</option>\n                <option value=\"winter\">WINTER</option> */}\n              </button>\n            </label>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport util from '../util';\nexport default class Basket extends Component {\n  render() {\n    const cartItems = this.props.cartItems;\n    console.log('cartItems:' + cartItems);\n    return (\n      <div className=\"alert alert-info\">\n        {cartItems.length === 0\n          ? 'Basket is empty'\n          : <div>You have {cartItems.length} products in the basket</div> && (\n              <ul>\n                {cartItems.map(item => (\n                  <li key={item.id}>\n                    <b>{item.title}</b>\n                    {item.count} = $ {item.price * item.count}\n                    <button\n                      className=\"small-btn btn-outline-danger\"\n                      onClick={e => this.props.handleRemoveFromCart(e, item)}>\n                      X\n                    </button>\n                  </li>\n                ))}\n              </ul>\n            )}\n        {/* TODO learn reduce()*/}\n        Total:{' '}\n        {util.formatCurrency(\n          cartItems.reduce((a, c) => a + c.price * c.count, 0)\n        )}\n        <br />\n        <button\n          className=\"small-btn btn-primary\"\n          onClick={() => alert('checkout')}>\n          checkout\n        </button>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n        <a className=\"navbar-brand\" href=\"#\">\n          4Cast\n        </a>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarColor01\"\n          aria-controls=\"navbarColor01\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarColor01\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item active\">\n              <a className=\"nav-link\" href=\"#\">\n                Home <span class=\"sr-only\">(current)</span>\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"#\">\n                What to wear\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"#\">\n                Where to go\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"#\">\n                About\n              </a>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class WeatherInfo extends Component {\n  render() {\n    console.log('img' + this.props.weather);\n    return (\n      <div>\n        <div className=\"container WeatherInfo\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <h3>{this.props.city}</h3>\n              <img\n                src={`/weatherImages/${this.props.weatherImg}.png`}\n                alt={this.props.weather}\n              />\n              <h5>{this.props.weather}</h5>\n            </div>\n            <div className=\"col-md\">\n              <div\n                className=\"card border-primary mb-3\"\n                style={{ maxWidth: '20rem;' }}>\n                <div className=\"card-body\">\n                  <h4 className=\"card-title\">\n                    Temperature: {this.props.temperature}\n                  </h4>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Products from './Products';\nimport Filter from './Filter';\nimport Basket from './Basket';\nimport Header from './Header';\nimport WeatherInfo from './WeatherInfo';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      products: [],\n      filteredProducts: [],\n      size: '',\n      sort: '',\n      season: '',\n      weather: undefined,\n      weatherImg: undefined,\n      temperature: undefined,\n      city: undefined,\n      humidity: undefined,\n      description: undefined,\n      cartItems: []\n    };\n    this.handleChangeSort = this.handleChangeSort.bind(this);\n    this.handleChangeSize = this.handleChangeSize.bind(this);\n    this.handleChangeSeason = this.handleChangeSeason.bind(this);\n    this.handleAddToCart = this.handleAddToCart.bind(this);\n    this.handleRemoveFromCart = this.handleRemoveFromCart.bind(this);\n  }\n\n  componentDidMount() {\n    const apikey = '791989e83043288616d30ac61fc806e7';\n    const darkSky = 'https://api.darksky.net/forecast';\n    const openweather =\n      'api.openweathermap.org/data/2.5/forecast/daily?q={city name}&cnt={cnt}&appid={your api key}';\n    const cityname = 'Vancouver';\n    const opAPIkey = 'a9d26cdce59f235872922cf298bfdd24';\n    const cnt = '1';\n    fetch(\n      `https://api.darksky.net/forecast/791989e83043288616d30ac61fc806e7/37.8267,-122.4233/`\n    ).then(res => {\n      if (res.status !== 200) {\n        console.log('error');\n      }\n      res\n        .json()\n        .then(data => {\n          console.log('Its dar sky ' + data);\n          this.setState({\n            weather: data.weather[0].main,\n            temperature: data.main.temp,\n            city: data.name,\n            humidity: data.main.humidity,\n            description: data.weather[0].description,\n            error: ''\n          });\n        })\n        .then(state => {\n          if (this.state.weather === 'clear') {\n            this.setState({ weatherImg: 'sun' });\n          } else if (this.state.weather === 'Rain') {\n            this.setState({ weatherImg: 'rainy' });\n          } else {\n            this.setState({ weatherImg: 'cloudy' });\n          }\n        });\n    });\n    fetch('http://localhost:8000/products')\n      .then(res => res.json())\n      .then(data => {\n        this.setState({\n          products: data,\n          filteredProducts: data\n        });\n        console.log(data);\n      });\n  }\n  handleChangeSort(e) {\n    this.setState({ sort: e.target.value });\n    this.listProducts();\n  }\n  handleChangeSize(e) {\n    this.setState({ size: e.target.value });\n    this.listProducts();\n  }\n  handleChangeSeason() {\n    console.log(this.state.temperature);\n    if (this.state.temperature > 293.15) {\n      this.setState({ season: 'summer' });\n    } else if (this.state.temperature > 283.15) {\n      this.setState({ season: 'autumn' });\n    } else {\n      this.setState({ season: 'winter' });\n    }\n    this.listProducts();\n  }\n\n  listProducts() {\n    this.setState(state => {\n      console.log(state.season);\n      if (state.sort !== '') {\n        state.products.sort((a, b) =>\n          state.sort === 'lowest'\n            ? a.price > b.price\n              ? 1\n              : -1\n            : a.price < b.price\n            ? 1\n            : -1\n        );\n      } else {\n        state.products.sort((a, b) => (a.id < b.id ? 1 : -1));\n      }\n      if (state.size !== '' && state.season !== '') {\n        return {\n          filteredProducts: state.products.filter(function(a) {\n            return (\n              a.availableSizes.indexOf(state.size.toUpperCase()) >= 0 &&\n              a.season.indexOf(state.season.toLowerCase()) >= 0\n            );\n          })\n        };\n      } else if (state.size === '' && state.season !== '') {\n        return {\n          filteredProducts: state.products.filter(function(a) {\n            return a.season.indexOf(state.season.toLowerCase()) >= 0;\n          })\n        };\n      } else if (state.size !== '' && state.season === '')\n        return {\n          filteredProducts: state.products.filter(function(a) {\n            return a.availableSizes.indexOf(state.size.toUpperCase()) >= 0;\n          })\n        };\n      else\n        return {\n          filteredProducts: state.products.filter(function(a) {\n            return state.filteredProducts;\n          })\n        };\n    });\n  }\n  handleAddToCart(e, product) {\n    this.setState(state => {\n      const cartItems = state.cartItems;\n      let productAlreadyInCart = false;\n      cartItems.forEach(item => {\n        if (item.id === product.id) {\n          productAlreadyInCart = true;\n          item.count++;\n        }\n      });\n      if (!productAlreadyInCart) {\n        cartItems.push({ ...product, count: 1 });\n      }\n      localStorage.setItem('cartItems', JSON.stringify(cartItems));\n      return { cartItems: cartItems };\n    });\n  }\n  handleRemoveFromCart(e, item) {\n    this.setState(state => {\n      const cartItems = state.cartItems.filter(elm => elm.id !== item.id);\n      //now cartItems are the itmes which aren't clicked\n      localStorage.setItem('cartItems', JSON.stringify(cartItems));\n      // console.log(\"I'm handleRemove\");\n      return { cartItems: cartItems };\n    });\n  }\n  render() {\n    console.log('weather image' + this.state.weatherImg);\n    return (\n      <div>\n        <Header />\n        <br />\n        <div className=\"container\" style={{ marginTop: '30px' }}>\n          <h1>What To Wear</h1>\n          <hr />\n          <WeatherInfo\n            weatherImg={this.state.weatherImg}\n            weather={this.state.weather}\n            temperature={this.state.temperature}\n            city={this.state.city}\n          />\n          <hr />\n          <div className=\"row\">\n            <div className=\"col-lg-9\">\n              <hr />\n              <Filter\n                size={this.state.sizes}\n                sort={this.state.sort}\n                handleChangeSize={this.handleChangeSize}\n                handleChangeSort={this.handleChangeSort}\n                handleChangeSeason={this.handleChangeSeason}\n                count={this.state.filteredProducts.length}\n              />\n              <hr />\n              <Products\n                products={this.state.filteredProducts}\n                handleAddToCart={this.handleAddToCart}\n              />\n            </div>\n            <div className=\"col-lg-3\">\n              <Basket\n                cartItems={this.state.cartItems}\n                handleRemoveFromCart={this.handleRemoveFromCart}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/Style.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}